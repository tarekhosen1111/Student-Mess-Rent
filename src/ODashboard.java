import com.mysql.cj.protocol.Resultset;
import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.io.File;
import java.io.FileInputStream;
import javax.swing.JFileChooser;
import java.sql.*;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author SHIKHON
 */
public class ODashboard extends javax.swing.JFrame {

    /**
     * Creates new form ODashboard
     */
    public ODashboard() {
        initComponents();
        table_show();
         Table1.getTableHeader().setFont(new Font("Arial Rounded MT Bold",Font.BOLD,14));
        Table1.getTableHeader().setOpaque(false);
        Table1.getTableHeader().setBackground(new Color(100,51,51));
        //Table1.getTableHeader().setForeground(new Color(255,204,102));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnadd = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        btnedit = new javax.swing.JButton();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        txtphoto1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtousername1 = new javax.swing.JTextField();
        txtpassword = new javax.swing.JPasswordField();
        txtoid = new javax.swing.JTextField();
        txtodetails = new javax.swing.JTextField();
        txtolocation = new javax.swing.JTextField();
        txtofees = new javax.swing.JTextField();
        txtofacilities = new javax.swing.JTextField();
        btnupload = new javax.swing.JButton();
        txtphoto2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table1 = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MESSOWNER");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnadd.setFont(new java.awt.Font("Imprint MT Shadow", 1, 20)); // NOI18N
        btnadd.setText("Add");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });
        getContentPane().add(btnadd, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 100, -1));

        btndelete.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        btndelete.setText("DELETE");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        getContentPane().add(btndelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 490, -1, -1));

        jLabel9.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 65)); // NOI18N
        jLabel9.setText("Mess Info");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, 340, 60));

        btnedit.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        btnedit.setText("EDIT");
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        getContentPane().add(btnedit, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 490, -1, -1));

        jDesktopPane1.setBackground(new java.awt.Color(255, 255, 255));
        jDesktopPane1.setMaximumSize(new java.awt.Dimension(320, 220));

        jDesktopPane1.setLayer(txtphoto1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(txtphoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(txtphoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 130, 330, 230));

        jPanel1.setBackground(new java.awt.Color(204, 153, 80,80));

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        jLabel2.setText("Username:");

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        jLabel3.setText("Password :");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        jLabel4.setText("Mess id      :");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        jLabel5.setText("Details       :");

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        jLabel6.setText("Locations :");

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        jLabel7.setText("Fees           :");

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 20)); // NOI18N
        jLabel8.setText("Facilities  :");

        btnupload.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        btnupload.setText("UPLOAD");
        btnupload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnuploadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtphoto2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnupload)
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtousername1)
                            .addComponent(txtpassword)
                            .addComponent(txtoid)
                            .addComponent(txtodetails, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                            .addComponent(txtolocation)
                            .addComponent(txtofacilities)
                            .addComponent(txtofees))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtousername1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtoid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtodetails, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtolocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtofees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtofacilities, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtphoto2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnupload))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 410, 350));

        jButton1.setFont(new java.awt.Font("Imprint MT Shadow", 1, 21)); // NOI18N
        jButton1.setText("Logout");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 550, 120, 40));

        Table1.setBackground(new java.awt.Color(255, 255, 204));
        Table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mess id", "Username", "Details", "Locations", "Fees", " Facilities"
            }
        ));
        Table1.setSelectionBackground(new java.awt.Color(255, 153, 0));
        Table1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Table1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 430, 560, 150));

        jLabel13.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 30)); // NOI18N
        jLabel13.setText("  Username :");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 380, 200, 40));

        txtsearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtsearchMouseClicked(evt);
            }
        });
        txtsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsearchActionPerformed(evt);
            }
        });
        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtsearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 390, 210, 30));

        jLabel10.setIcon(new javax.swing.ImageIcon("D:\\Downloads\\search1.1.png")); // NOI18N
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 390, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon("D:\\Downloads\\w4.4.jpg")); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 662));

        setSize(new java.awt.Dimension(1091, 672));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
        Connection con1,con2;
        PreparedStatement insert,push,insert1,insert2,pst;
        private void table_show() {
           int c;
           try {
                Class.forName("com.mysql.cj.jdbc.Driver"); //Register the mysql driver
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo","root","");
           insert = con1.prepareStatement("SELECT * FROM record");
           ResultSet Rs = insert.executeQuery();
            ResultSetMetaData Rss = Rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel Df = (DefaultTableModel) Table1.getModel();
            Df.setRowCount(0);
            while (Rs.next()) {
                Vector v2 = new Vector();
          
                for (int ii = 2; ii <= c; ii++) {
                    v2.add(Rs.getString("id"));
                    
                    v2.add(Rs.getString("username"));
                    
                    v2.add(Rs.getString("details"));
                    v2.add(Rs.getString("location"));
                    v2.add(Rs.getString("fees"));
                    v2.add(Rs.getString("facilities"));
                    //v2.add(Rs.getBytes("photo"));
                    //v2.add(Rs.getString("location"));
                      
                }
              
                Df.addRow(v2);
            }

            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }catch (SQLException ex) {
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }   int tc=-1;
   // String tc;
    private void Table1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Table1MouseClicked
        // TODO add your handling code here:
        // FetchPhoto();
        DefaultTableModel Df = (DefaultTableModel) Table1.getModel();
        int selectedIndex = Table1.getSelectedRow();
        
       
        // txtphoto1.setIcon(Df.getValueAt(selectedIndex, 6).toString());
       // txtphoto1.setIcon(format);
          
        
        // FetchPhoto();
         
      //  int row=Table1.getSelectedRow();
       int vv=Table1.getSelectedColumn();
       String tc=Table1.getModel().getValueAt(selectedIndex, 0).toString();
       
        try{
            Class.forName("com.mysql.cj.jdbc.Driver"); //Register the mysql driver
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo","root","");
           String query="select * from record where id="+tc+"";
           insert=con1.prepareStatement(query);
           ResultSet rs=insert.executeQuery();
           if(rs.next()){
             String username=rs.getString("username");
               String id=rs.getString("id");
              
               
              String details=rs.getString("details");
              String location=rs.getString("location");
              String fees=rs.getString("fees");
              String facilities=rs.getString("facilities");
             // String photo1=rs.getString("photo");
              byte[] image=rs.getBytes("photo");
              format =new ImageIcon(image);
              txtphoto1.setIcon(format);
            //  txtousername1.setText(username);
            //  txtoid.setText(""+id);
              
              txtodetails.setText(details);
              txtolocation.setText(location);
              txtofees.setText(fees);
              txtofacilities.setText(facilities);
             // txtphoto2.setText(photo1);
              insert.close();
              rs.close();
              
             
           }
        }catch (Exception ex) {
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }


          
         txtousername1.setText(Df.getValueAt(selectedIndex, 1).toString());
        //  tc=Table1.getModel().getValueAt(selectedIndex, 1).toString();
        txtoid.setText(Df.getValueAt(selectedIndex, 0).toString());
       // tc=Integer.valueOf(Df.getValueAt(selectedIndex, 1).toString());
         txtodetails.setText(Df.getValueAt(selectedIndex, 2).toString());
         txtolocation.setText(Df.getValueAt(selectedIndex, 3).toString());
         txtofees.setText(Df.getValueAt(selectedIndex, 4).toString());
         txtofacilities.setText(Df.getValueAt(selectedIndex, 5).toString());
        //txtphoto2.setText(Df.getValueAt(selectedIndex, 6).toString());
         
  
    }//GEN-LAST:event_Table1MouseClicked

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:
        DefaultTableModel Df = (DefaultTableModel) Table1.getModel();
         int selectedIndex = Table1.getSelectedRow();
          String username =txtousername1.getText();
        String password =txtpassword.getText();
        String id =txtoid.getText();
        String details =txtodetails.getText();
        String location =txtolocation.getText();
        String fees =txtofees.getText();
        String facilities =txtofacilities.getText();
         String photo1 =txtphoto2.getText();
        if(username.isEmpty()||password.isEmpty()||id.isEmpty()||details.isEmpty()||location.isEmpty()||fees.isEmpty()||facilities.isEmpty()||photo1.isEmpty()){
            JOptionPane.showMessageDialog(this,"Every field must be filled up.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
          
        
            try {
                Class.forName("com.mysql.cj.jdbc.Driver"); //Register the mysql driver
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo","root","");
            insert = con1.prepareStatement("Select * from owners WHERE username = ? AND password = ?");
            insert.setString(1,username);
            insert.setString(2,password);
            
            ResultSet res = insert.executeQuery();
            if(res.next()){
                insert1 = con1.prepareStatement("update record set details= ?,location= ?,fees= ?,facilities= ?,photo= ? where id= ?");
          //  insert1.setString(1,id);
            insert1.setString(1,details);
            insert1.setString(2,location);
            insert1.setString(3,fees);
            insert1.setString(4,facilities);
            insert1.setBytes(5,photo);
            insert1.setString(6,id);
            
            
            insert1.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Updated");
            txtousername1.setText("");
            txtpassword.setText("");
            txtoid.setText("");
            txtodetails.setText("");
            txtolocation.setText("");
            txtofees.setText("");
            txtofacilities.setText("");
            txtphoto2.setText("");
            txtousername1.requestFocus();
            table_show();
                
            }
            else{
                 JOptionPane.showMessageDialog(this,"Password not matched", "Error", JOptionPane.ERROR_MESSAGE);
            }
            } catch (ClassNotFoundException ex) {
               
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Change Mess id", "Error", JOptionPane.ERROR_MESSAGE);
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
        


    }//GEN-LAST:event_btneditActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
         DefaultTableModel Df = (DefaultTableModel) Table1.getModel();
         int selectedIndex = Table1.getSelectedRow();
          String username =txtousername1.getText();
        String password =txtpassword.getText();
        String id =txtoid.getText();
        String details =txtodetails.getText();
        String location =txtolocation.getText();
        String fees =txtofees.getText();
        String facilities =txtofacilities.getText();
        if(username.isEmpty()||password.isEmpty()||id.isEmpty()||details.isEmpty()||location.isEmpty()||fees.isEmpty()||facilities.isEmpty()){
            JOptionPane.showMessageDialog(this,"Every field must be filled up.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
        
        
            try {
                
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo","root","");
            insert = con1.prepareStatement("Select * from owners WHERE username = ? AND password = ?");
            insert.setString(1,username);
            insert.setString(2,password);
            
            ResultSet res = insert.executeQuery();
            if(res.next()){
              int dialogResult = JOptionPane.showConfirmDialog (null, "Do you want to Delete the record","Warning",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
 
            Class.forName("com.mysql.cj.jdbc.Driver");
           
            insert2 = con1.prepareStatement("delete from record where id = ?");
           insert2.setString(1, id);
           // insert.setInt(1,id); for auto 
            insert2.executeUpdate();
            JOptionPane.showMessageDialog(this, "Record Delete");
            txtousername1.setText("");
            txtpassword.setText("");
            txtoid.setText("");
            txtodetails.setText("");
            txtolocation.setText("");
            txtofees.setText("");
            txtofacilities.setText("");
            txtphoto2.setText("");
           // txtphoto1.setText("");
            txtousername1.requestFocus();
            table_show();
          
           }
            
                
            }
            else{
                 JOptionPane.showMessageDialog(this,"Password not matched", "Error", JOptionPane.ERROR_MESSAGE);
            }
            } catch (ClassNotFoundException ex) {
               
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Change Mess id", "Error", JOptionPane.ERROR_MESSAGE);
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            
            
          
        }
        
    }//GEN-LAST:event_btndeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         LOGIN reg = new LOGIN();
        reg.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnuploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnuploadActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser=new JFileChooser();
        chooser.showOpenDialog(null);
        File f=chooser.getSelectedFile();
        txtphoto1.setIcon(new ImageIcon(f.toString()));
        filename = f.getAbsolutePath();
        txtphoto2.setText(filename);
        
        try {
                
         File image =new File(filename);
         FileInputStream fis = new FileInputStream(image);
          ByteArrayOutputStream bos= new ByteArrayOutputStream() ;
          byte[] buf=new byte[1024];
             for(int readNum;(readNum=fis.read(buf))!=-1;){
                bos.write(buf,0,readNum);
             }
           
            
             photo=bos.toByteArray()   ;
            
           
        } catch (Exception ex) {
             JOptionPane.showMessageDialog(null,ex);  
             //java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnuploadActionPerformed

    private void txtsearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtsearchMouseClicked
        // TODO add your handling code here:
         txtsearch.setText("");
    }//GEN-LAST:event_txtsearchMouseClicked
ResultSet rs;
    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        int c;
         String tf=txtsearch.getText();
        try{
            String query="SELECT * FROM record WHERE username LIKE '%"+tf+"%'";
            pst=con1.prepareStatement(query);
           // rs=pst.executeQuery();
           // Table1.setModel(DbUtils.resultSetToTableModel(rs));
            ResultSet Rs = pst.executeQuery();
            ResultSetMetaData Rss = Rs.getMetaData();
            c = Rss.getColumnCount();
            DefaultTableModel Df = (DefaultTableModel) Table1.getModel();
            Df.setRowCount(0);
            while (Rs.next()) {
                Vector v2 = new Vector();
          
                for (int ii = 2; ii <= c; ii++) {
                    v2.add(Rs.getString("id"));
                    
                    v2.add(Rs.getString("username"));
                    
                    v2.add(Rs.getString("details"));
                    v2.add(Rs.getString("location"));
                    v2.add(Rs.getString("fees"));
                    v2.add(Rs.getString("facilities"));
                    //v2.add(Rs.getBytes("photo"));
                    //v2.add(Rs.getString("location"));
                      
                }
              
                Df.addRow(v2);
            }

        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }finally{
            try{
                if(pst !=null){
                    rs.close();
                    pst.close();
                }
            }catch(Exception e){
                
            }
        }
    }//GEN-LAST:event_txtsearchKeyReleased

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
                                            
           String username =txtousername1.getText();
        String password =txtpassword.getText();
        String id =txtoid.getText();
        String details =txtodetails.getText();
        String location =txtolocation.getText();
        String fees =txtofees.getText();
        String facilities =txtofacilities.getText();
        String photo1 =txtphoto2.getText();
       // String username =txtousername1.getText();
       if(username.isEmpty()||password.isEmpty()|id.isEmpty()||details.isEmpty()||location.isEmpty()||fees.isEmpty()||facilities.isEmpty()||photo1.isEmpty()){
            JOptionPane.showMessageDialog(this,"Every field must be filled up.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
            try {
                Class.forName("com.mysql.cj.jdbc.Driver"); //Register the mysql driver
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/demo","root","");
            insert = con1.prepareStatement("Select * from owners WHERE username = ? AND password = ?");
            insert.setString(1,username);
            insert.setString(2,password);
            
            
            ResultSet res = insert.executeQuery();
            if(res.next()){
               
               push = con1.prepareStatement("insert into record (username,id,details,location,fees,facilities,photo)values(?,?,?,?,?,?,?)");
               push.setString(1,username);
               push.setString(2,id);
               push.setString(3,details);
               push.setString(4,location);
               push.setString(5,fees);
               push.setString(6,facilities);
               push.setBytes(7,photo);

            
               push.executeUpdate();
              JOptionPane.showMessageDialog(this, "Record Saved");
            
            
            txtousername1.setText("");
            txtpassword.setText("");
            txtoid.setText("");
            txtodetails.setText("");
            txtolocation.setText("");
            txtofees.setText("");
            txtofacilities.setText("");
            txtphoto2.setText("");
            txtousername1.requestFocus();
            table_show();
            }
            else{
                JOptionPane.showMessageDialog(this,"Username / Password not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }catch (SQLException ex) {
                JOptionPane.showMessageDialog(this,"Change Mess id", "Error", JOptionPane.ERROR_MESSAGE);
                java.util.logging.Logger.getLogger(LOGIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
        }
  

    }//GEN-LAST:event_btnaddActionPerformed

    private void txtsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ODashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ODashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ODashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ODashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ODashboard().setVisible(true);
            }
        });
        
    }
byte[] photo = null;
String filename=null;
private ImageIcon format;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table1;
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnupload;
    private javax.swing.JButton jButton1;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtodetails;
    private javax.swing.JTextField txtofacilities;
    private javax.swing.JTextField txtofees;
    private javax.swing.JTextField txtoid;
    private javax.swing.JTextField txtolocation;
    private javax.swing.JTextField txtousername1;
    private javax.swing.JPasswordField txtpassword;
    private javax.swing.JLabel txtphoto1;
    private javax.swing.JTextField txtphoto2;
    private javax.swing.JTextField txtsearch;
    // End of variables declaration//GEN-END:variables

    private void FetchPhoto() {
       int row=Table1.getSelectedRow();
       int vv=Table1.getSelectedColumn();
       String tc=Table1.getModel().getValueAt(row, 1).toString();
       
        try{
           String query="select * from record where id="+tc+"";
           insert=con1.prepareStatement(query);
           ResultSet rs=insert.executeQuery();
           if(rs.next()){
              int id=rs.getInt("id");
              String username=rs.getString("username");
              String details=rs.getString("details");
              String location=rs.getString("location");
              String fees=rs.getString("fees");
              String facilities=rs.getString("facilities");
              byte[] image=rs.getBytes("photo");
              format =new ImageIcon(image);
              txtphoto1.setIcon(format);
              txtoid.setText(""+id);
              txtousername1.setText(username);
              txtodetails.setText(details);
              txtolocation.setText(location);
              txtofees.setText(fees);
              txtofacilities.setText(facilities);
              insert.close();
              rs.close();
              
             
           }
        }catch(Exception ex){
        }
    }

}
